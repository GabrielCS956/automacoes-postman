{
	"info": {
		"_postman_id": "46757820-32ab63d3-1e2a-4c3f-bf47-52616cde4ee7",
		"name": "PetStore",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Pet",
			"item": [
				{
					"name": "Uploads an image",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "ea65bc88-7430-4517-a338-38bd609de1cb",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"pm.test(\"Validar upload da imagem para cadastro do pet\", () => {\r",
									"\r",
									"   if(pm.response.code === 200){\r",
									"     const jsonData = pm.response.json();\r",
									"     pm.expect(jsonData, \"Valor vazio\").to.exist\r",
									"     pm.expect(jsonData.code, \"Sem sucesso\").to.eql(200)\r",
									"\r",
									"   }\r",
									"   else{\r",
									"     pm.expect.fail(JSON.stringify(jsonData) + \" RETURN STATUS CODE : \" + pm.response.code)\r",
									"   }\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "46757820-de9da45f-5888-4c0b-b83f-d9a7866bf875",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"type": "file",
									"contentType": "image/png",
									"key": "file",
									"src": "/C:/Users/gabri/Downloads/3047928.png"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/v2/pet/{{IDPet}}/uploadImage",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"v2",
								"pet",
								"{{IDPet}}",
								"uploadImage"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\r\n  'https://petstore.swagger.io/v2/pet/55/uploadImage' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: multipart/form-data' \\\r\n  -F 'file=@3047928.png;type=image/png'"
					},
					"response": []
				},
				{
					"name": "Add a new pet to the store",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "3c07bbe0-dcf3-4772-ad22-a892b96680bf",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"    pm.test(\"Pet adicionado com sucesso\", () => {\r",
									"\r",
									"   if(pm.response.code === 200){\r",
									"     pm.expect(jsonData, \"Valor vazio\").to.exist;\r",
									"     pm.expect(jsonData.code, \"Sem sucesso\").to.eql(200);\r",
									"    pm.collectionVariables.set(\"IDPet\",jsonData.id);\r",
									"   }\r",
									"   else{\r",
									"     pm.expect.fail(JSON.stringify(jsonData) + \" RETURN STATUS CODE : \" + pm.response.code)\r",
									"   }\r",
									"})\r",
									" \r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "2a2a6b36-cff1-4c17-8d3b-2572c088e8a8",
								"exec": [
									"// Nomes de Pets\r",
									"const petNames = [\r",
									"  \"Buddy\",\"Luna\",\"Max\",\"Bella\",\"Charlie\",\"Daisy\",\"Leo\",\"Molly\",\"Rocky\",\"Sophie\",\"Apollo\",\"Cleo\",\"Jasper\",\"Ruby\",\"Sam\",\"Willow\",\"Zoe\",\"Oscar\",\"Thor\",\"Mel\",\"Simba\",\"Nala\",\"Freud\",\"Puff\",\"Bidu\",\"Luke\",\"Mia\",\"Kiko\",\"Oliver\",\"Rex\",\"Amora\",\"Sushi\",\"Pirata\",\"Princesa\",\"Duque\",\"Lady\",\"Zeus\",\"Athena\",\"Cookie\",\"Wifi\",\"Zuzu\",\"Tatá\",\"Nani\",\"Neném\",\"Fran\",\"Fafá\",\"Dengo\",\"Baby\",\"Zizi\",\"Buba\",\"Bica\",\"Bibi\",\"Bebê\",\"Cuca\",\"Didi\",\"Dedé\",\"Fabi\",\"Fifi\",\"Fofi\",\"Gui\",\"Ju\",\"Juju\",\"Kimba\",\"Kiki\",\"Kira\",\"Kaki\",\"Kuki\",\"Luka\",\"Lula\",\"Lu\",\"Mamona\",\"Mancha\",\"Mimi\",\"Nani\",\"Nuca\",\"Pinta\",\"Pipa\",\"Pupi\",\"Pita\",\"Sapeca\",\"Titi\",\"Vavá\",\"Lupi\",\"Juca\",\"Pepe\",\"Joca\",\"Balu\",\"Cadu\",\"Guga\",\"Tutti\",\"Caca\",\"Ti\",\"Auau\",\"Xodó\",\"Duda\",\"Jojo\",\"Indy\",\"Jackie\",\"Jim\",\"Joy\",\"Kim\",\"Kora\",\"Kali\",\"Kia\",\"Leslie\",\"Misha\",\"Maya\",\"Noah\",\"Randy\",\"Sugar\",\"Sweet\",\"Angel\",\"Funny\",\"Harley\",\"Theo\",\"Max\",\"Snow\",\"Tony\",\"Jack\",\"Zac\",\"Willy\",\"Doki\",\"Fox\",\"Louis\",\"Blue\",\"Nicky\",\"Holly\",\"Izzy\",\"Jake\",\"Koda\",\"Lee\",\"Murphy\",\"Liam\",\"Sammy\",\"Simon\",\"Willow\",\"Yang\",\"Alex\",\"Taylor\",\"Charlie\",\"Quinn\",\"Alexis\",\"Cameron\",\"Jules\"\r",
									"];\r",
									"\r",
									"// Lista de Categorias de Animais\r",
									"const animalCategories = [\r",
									"\"Cachorro Golden Retriever\",\"Cachorro Labrador Retriever\",\"Cachorro Pastor Alemão\",\"Cachorro Shih Tzu\",\"Cachorro Yorkshire Terrier\",\"Cachorro Poodle\",\"Cachorro Pug\",\"Cachorro Bulldog Francês\",\"Cachorro Border Collie\",\"Cachorro Husky Siberiano\",\"Gato Persa\",\"Gato Siamês\",\"Gato Maine Coon\",\"Gato Ragdoll\",\"Gato Sphynx\",\"Gato Angorá\",\"Gato Bengal\",\"Gato British Shorthair\",\"Peixe Betta\",\"Peixe Kinguio\",\"Peixe Neon Tetra\",\"Peixe Guppy\",\"Peixe Acará-Bandeira\",\"Coelho Mini Lop\",\"Coelho Holland Lop\",\"Coelho Cabeça de Leão\",\"Coelho Gigante de Flandres\",\"Coelho Rex\",\"Hamster Sírio\",\"Hamster Anão Russo\",\"Hamster Roborovski\",\"Hamster Chinês\",\"Pássaro Periquito\",\"Pássaro Canário\",\"Pássaro Calopsita\",\"Pássaro Agapornis\",\"Pássaro Diamante Mandarim\",\"Cachorro Boxer\",\"Cachorro Dachshund\",\"Cachorro Chihuahua\",\"Cachorro Rottweiler\",\"Cachorro Doberman Pinscher\",\"Cachorro Beagle\",\"Cachorro Buldogue Inglês\",\"Cachorro Boston Terrier\",\"Cachorro Basset Hound\",\"Cachorro São Bernardo\",\"Gato Abissínio\",\"Gato American Shorthair\",\"Gato Oriental Shorthair\",\"Gato Siberiano\",\"Gato Azul Russo\",\"Gato Somali\",\"Gato Birmanês\",\"Gato Devon Rex\",\"Peixe Molly\",\"Peixe Espada\",\"Peixe Platy\",\"Peixe Corydora\",\"Peixe Oscar\",\"Peixe Cascudo\",\"Coelho Angorá\",\"Coelho Hotot\",\"Coelho Californiano\",\"Coelho Mini Rex\",\"Porquinho-da-Índia Abissínio\",\"Porquinho-da-Índia Americano\",\"Porquinho-da-Índia Peruano\",\"Pássaro Cacatua\",\"Pássaro Papagaio\",\"Pássaro Mainá\",\"Pássaro Zebra Finch\",\"Pássaro Coleiro\"\r",
									"];\r",
									"\r",
									"// Tags\r",
									"const customTags = [\r",
									"   \"Vacinado\",\"Adotado\",\"Brincalhão\",\"Calmo\",\"Treinado\",\"Dócil\",\"Pelagem Longa\",\"Filhote\",\"Adulto\",\"Castrado\",\"Doméstico\",\"Exótico\",\"De Grande Porte\",\"De Pequeno Porte\",\"Obediente\",\"Independente\",\"Protetor\",\"Energético\",\"Preguiçoso\",\"Fofo\",\"Barulhento\",\"Silencioso\",\"Curioso\",\"Sociável\",\"Antissocial\",\"Destruidor\",\"Comilão\",\"Inteligente\",\"Leal\",\"Corajoso\",\"Tímido\",\"Agitável\",\"Apegado\",\"Brando\",\"Teimoso\",\"Engraçado\",\"Cheiroso\",\"Esperto\",\"Limpo\",\"Bagunceiro\",\"Carente\",\"Ativo\",\"Pelo Curto\",\"Pelo Médio\",\"Olhos Azuis\",\"Olhos Verdes\",\"Orelhas Pontudas\",\"Orelhas Caídas\",\"Cauda Longa\",\"Cauda Curta\",\"Pescoço Longo\",\"Patas Curtas\",\"Amigável com crianças\",\"Amigável com outros pets\",\"Gosta de água\",\"Não gosta de água\",\"Treinável\",\"Requer cuidados especiais\",\"Vocal\",\"Saltador\",\"Escavador\",\"Nadador\",\"Terrestre\",\"Arbóreo\",\"Noturno\",\"Diurno\",\"Mestiço\",\"Puro-sangue\",\"Resgatado\",\"Alergênico\",\"Hipoalergênico\",\"Grande apetite\",\"Pequeno apetite\",\"Gosta de colo\",\"Gosta de passear\"\r",
									"];\r",
									"\r",
									"// Função para obter um item aleatório de um array\r",
									"function getRandomItem(arr) {\r",
									"    return arr[Math.floor(Math.random() * arr.length)];\r",
									"}\r",
									"\r",
									"// Função para gerar um ID aleatório de 4 dígitos\r",
									"function generateFourDigitId() {\r",
									"    return Math.floor(1000 + Math.random() * 9000); // Gera número entre 1000 e 9999\r",
									"}\r",
									"\r",
									"// --- Geração dos Dados ---\r",
									"// Gera dois nomes aleatórios e os une para criar um nome de pet mais variado\r",
									"const part1OfName = getRandomItem(petNames);\r",
									"let part2OfName = getRandomItem(petNames);\r",
									"// Garante que o segundo nome seja diferente do primeiro para mais variedade\r",
									"while (part2OfName === part1OfName) {\r",
									"    part2OfName = getRandomItem(petNames);\r",
									"}\r",
									"const randomPetName = `${part1OfName} ${part2OfName}`; // Junção dos dois nomes\r",
									"\r",
									"const randomCategoryName = getRandomItem(animalCategories); // Seleciona uma categoria da sua lista\r",
									"const randomCustomTag = getRandomItem(customTags);\r",
									"\r",
									"// Geração de IDs de 4 dígitos\r",
									"const petId = generateFourDigitId();\r",
									"const categoryId = generateFourDigitId();\r",
									"const tagId = generateFourDigitId();\r",
									"const customTagId = generateFourDigitId();\r",
									"\r",
									"// Variáveis\r",
									"pm.collectionVariables.set(\"part1OfName\", part1OfName);\r",
									"pm.collectionVariables.set(\"part2OfName\", part2OfName);\r",
									"pm.collectionVariables.set(\"petName\", randomPetName);\r",
									"pm.collectionVariables.set(\"petCategoryName\", randomCategoryName);\r",
									"pm.collectionVariables.set(\"petId\", petId);\r",
									"pm.collectionVariables.set(\"petCategoryId\", categoryId);\r",
									"pm.collectionVariables.set(\"petTagId\", tagId);\r",
									"pm.collectionVariables.set(\"petCustomTag\", randomCustomTag);\r",
									"pm.collectionVariables.set(\"petCustomTagId\", customTagId);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "46757820-eb9d9a97-046e-42d6-bf28-b7da51d9bd62",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{petId}},\r\n  \"category\": {\r\n    \"id\": {{petCategoryId}},\r\n    \"name\": \"{{petCategoryName}}\"\r\n  },\r\n  \"name\": \"{{petName}}\",\r\n  \"photoUrls\": [\r\n    \"https://example.com/photos/{{part2OfName}}_{{part1OfName}}.jpg\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": {{petTagId}},\r\n      \"name\": \"{{petCustomTag}}\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/v2/pet",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"v2",
								"pet"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\r\n  'https://petstore.swagger.io/v2/pet' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "Find pet by status",
					"event": [
						{
							"listen": "test",
							"script": {
								"id": "f8cd8535-df5f-4700-85cf-fd58858a579e",
								"exec": [
									"let jsonData = pm.response.json();\r",
									"pm.test(\"Lista de pets encontrada\", () => {\r",
									"\r",
									"   if(pm.response.code === 200){\r",
									"     pm.expect(jsonData, \"Valor vazio\").to.exist;\r",
									"\r",
									"   }\r",
									"   else{\r",
									"     pm.expect.fail(JSON.stringify(jsonData) + \" RETURN STATUS CODE : \" + pm.response.code)\r",
									"   }\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"id": "b24bb388-bc78-42d6-b6a2-39438f20385a",
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "46757820-24b8d1de-4c12-4316-860a-34555c70a3bf",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{baseURL}}/v2/pet/findByStatus?status=avaliable,pending,sold",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"v2",
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "",
									"value": null,
									"type": "text",
									"disabled": true
								},
								{
									"key": "status",
									"value": "avaliable,pending,sold"
								}
							]
						},
						"description": "Generated from cURL: curl -X 'GET' \\\r\n  'https://petstore.swagger.io/v2/pet/findByStatus?status=pending' \\\r\n  -H 'accept: application/json'"
					},
					"response": []
				},
				{
					"name": "Update an existing pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "4cf910e2-c80a-4a42-846a-fee69dd992bd",
								"exec": [
									"\r",
									"pm.sendRequest({\r",
									"    url: `${pm.environment.get(\"baseURL\")}/v2/pet/findByStatus?status=available,pending,sold`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    if (err || res.code !== 200) {\r",
									"        console.error(\"Erro ao buscar pets por status:\", err || res.status);\r",
									"        postman.setNextRequest(null); \r",
									"        return;\r",
									"    }\r",
									"\r",
									"    const pets = res.json();\r",
									"    const ids = pets\r",
									"        .filter(pet => pet.id !== undefined && pet.id !== null)\r",
									"        .map(pet => pet.id);\r",
									"\r",
									"    if (ids.length === 0) {\r",
									"        console.error(\"Nenhum pet com ID encontrado. Parando execução.\");\r",
									"        postman.setNextRequest(null); \r",
									"        return;\r",
									"    }\r",
									"\r",
									"    const randomId = ids[Math.floor(Math.random() * ids.length)];\r",
									"    pm.variables.set(\"IDPetupd\", randomId);\r",
									"    console.log(\"IDPet selecionado:\", randomId);\r",
									"\r",
									"    postman.setNextRequest(\"Nome da Sua Requisição Principal\");\r",
									"    console.log(\"IDPet selecionado:\", randomId);\r",
									"} )\r",
									"\r",
									"// Nomes de Pets\r",
									"const petNames = [\r",
									"  \"Buddy\",\"Luna\",\"Max\",\"Bella\",\"Charlie\",\"Daisy\",\"Leo\",\"Molly\",\"Rocky\",\"Sophie\",\"Apollo\",\"Cleo\",\"Jasper\",\"Ruby\",\"Sam\",\"Willow\",\"Zoe\",\"Oscar\",\"Thor\",\"Mel\",\"Simba\",\"Nala\",\"Freud\",\"Puff\",\"Bidu\",\"Luke\",\"Mia\",\"Kiko\",\"Oliver\",\"Rex\",\"Amora\",\"Sushi\",\"Pirata\",\"Princesa\",\"Duque\",\"Lady\",\"Zeus\",\"Athena\",\"Cookie\",\"Wifi\",\"Zuzu\",\"Tatá\",\"Nani\",\"Neném\",\"Fran\",\"Fafá\",\"Dengo\",\"Baby\",\"Zizi\",\"Buba\",\"Bica\",\"Bibi\",\"Bebê\",\"Cuca\",\"Didi\",\"Dedé\",\"Fabi\",\"Fifi\",\"Fofi\",\"Gui\",\"Ju\",\"Juju\",\"Kimba\",\"Kiki\",\"Kira\",\"Kaki\",\"Kuki\",\"Luka\",\"Lula\",\"Lu\",\"Mamona\",\"Mancha\",\"Mimi\",\"Nani\",\"Nuca\",\"Pinta\",\"Pipa\",\"Pupi\",\"Pita\",\"Sapeca\",\"Titi\",\"Vavá\",\"Lupi\",\"Juca\",\"Pepe\",\"Joca\",\"Balu\",\"Cadu\",\"Guga\",\"Tutti\",\"Caca\",\"Ti\",\"Auau\",\"Xodó\",\"Duda\",\"Jojo\",\"Indy\",\"Jackie\",\"Jim\",\"Joy\",\"Kim\",\"Kora\",\"Kali\",\"Kia\",\"Leslie\",\"Misha\",\"Maya\",\"Noah\",\"Randy\",\"Sugar\",\"Sweet\",\"Angel\",\"Funny\",\"Harley\",\"Theo\",\"Max\",\"Snow\",\"Tony\",\"Jack\",\"Zac\",\"Willy\",\"Doki\",\"Fox\",\"Louis\",\"Blue\",\"Nicky\",\"Holly\",\"Izzy\",\"Jake\",\"Koda\",\"Lee\",\"Murphy\",\"Liam\",\"Sammy\",\"Simon\",\"Willow\",\"Yang\",\"Alex\",\"Taylor\",\"Charlie\",\"Quinn\",\"Alexis\",\"Cameron\",\"Jules\"\r",
									"];\r",
									"\r",
									"// Lista de Categorias de Animais\r",
									"const animalCategories = [\r",
									"\"Cachorro Golden Retriever\",\"Cachorro Labrador Retriever\",\"Cachorro Pastor Alemão\",\"Cachorro Shih Tzu\",\"Cachorro Yorkshire Terrier\",\"Cachorro Poodle\",\"Cachorro Pug\",\"Cachorro Bulldog Francês\",\"Cachorro Border Collie\",\"Cachorro Husky Siberiano\",\"Gato Persa\",\"Gato Siamês\",\"Gato Maine Coon\",\"Gato Ragdoll\",\"Gato Sphynx\",\"Gato Angorá\",\"Gato Bengal\",\"Gato British Shorthair\",\"Peixe Betta\",\"Peixe Kinguio\",\"Peixe Neon Tetra\",\"Peixe Guppy\",\"Peixe Acará-Bandeira\",\"Coelho Mini Lop\",\"Coelho Holland Lop\",\"Coelho Cabeça de Leão\",\"Coelho Gigante de Flandres\",\"Coelho Rex\",\"Hamster Sírio\",\"Hamster Anão Russo\",\"Hamster Roborovski\",\"Hamster Chinês\",\"Pássaro Periquito\",\"Pássaro Canário\",\"Pássaro Calopsita\",\"Pássaro Agapornis\",\"Pássaro Diamante Mandarim\",\"Cachorro Boxer\",\"Cachorro Dachshund\",\"Cachorro Chihuahua\",\"Cachorro Rottweiler\",\"Cachorro Doberman Pinscher\",\"Cachorro Beagle\",\"Cachorro Buldogue Inglês\",\"Cachorro Boston Terrier\",\"Cachorro Basset Hound\",\"Cachorro São Bernardo\",\"Gato Abissínio\",\"Gato American Shorthair\",\"Gato Oriental Shorthair\",\"Gato Siberiano\",\"Gato Azul Russo\",\"Gato Somali\",\"Gato Birmanês\",\"Gato Devon Rex\",\"Peixe Molly\",\"Peixe Espada\",\"Peixe Platy\",\"Peixe Corydora\",\"Peixe Oscar\",\"Peixe Cascudo\",\"Coelho Angorá\",\"Coelho Hotot\",\"Coelho Californiano\",\"Coelho Mini Rex\",\"Porquinho-da-Índia Abissínio\",\"Porquinho-da-Índia Americano\",\"Porquinho-da-Índia Peruano\",\"Pássaro Cacatua\",\"Pássaro Papagaio\",\"Pássaro Mainá\",\"Pássaro Zebra Finch\",\"Pássaro Coleiro\"\r",
									"];\r",
									"\r",
									"// Tags\r",
									"const customTags = [\r",
									"   \"Vacinado\",\"Adotado\",\"Brincalhão\",\"Calmo\",\"Treinado\",\"Dócil\",\"Pelagem Longa\",\"Filhote\",\"Adulto\",\"Castrado\",\"Doméstico\",\"Exótico\",\"De Grande Porte\",\"De Pequeno Porte\",\"Obediente\",\"Independente\",\"Protetor\",\"Energético\",\"Preguiçoso\",\"Fofo\",\"Barulhento\",\"Silencioso\",\"Curioso\",\"Sociável\",\"Antissocial\",\"Destruidor\",\"Comilão\",\"Inteligente\",\"Leal\",\"Corajoso\",\"Tímido\",\"Agitável\",\"Apegado\",\"Brando\",\"Teimoso\",\"Engraçado\",\"Cheiroso\",\"Esperto\",\"Limpo\",\"Bagunceiro\",\"Carente\",\"Ativo\",\"Pelo Curto\",\"Pelo Médio\",\"Olhos Azuis\",\"Olhos Verdes\",\"Orelhas Pontudas\",\"Orelhas Caídas\",\"Cauda Longa\",\"Cauda Curta\",\"Pescoço Longo\",\"Patas Curtas\",\"Amigável com crianças\",\"Amigável com outros pets\",\"Gosta de água\",\"Não gosta de água\",\"Treinável\",\"Requer cuidados especiais\",\"Vocal\",\"Saltador\",\"Escavador\",\"Nadador\",\"Terrestre\",\"Arbóreo\",\"Noturno\",\"Diurno\",\"Mestiço\",\"Puro-sangue\",\"Resgatado\",\"Alergênico\",\"Hipoalergênico\",\"Grande apetite\",\"Pequeno apetite\",\"Gosta de colo\",\"Gosta de passear\"\r",
									"];\r",
									"\r",
									"// Função para obter um item aleatório de um array\r",
									"function getRandomItem(arr) {\r",
									"    return arr[Math.floor(Math.random() * arr.length)];\r",
									"}\r",
									"\r",
									"// Função para gerar um ID aleatório de 4 dígitos\r",
									"function generateFourDigitId() {\r",
									"    return Math.floor(1000 + Math.random() * 9000); // Gera número entre 1000 e 9999\r",
									"}\r",
									"\r",
									"// --- Geração dos Dados ---\r",
									"// Gera dois nomes aleatórios e os une para criar um nome de pet mais variado\r",
									"const updpart1OfName = getRandomItem(petNames);\r",
									"let updpart2OfName = getRandomItem(petNames);\r",
									"// Garante que o segundo nome seja diferente do primeiro para mais variedade\r",
									"while (updpart2OfName === updpart1OfName) {\r",
									"    updpart2OfName = getRandomItem(petNames);\r",
									"}\r",
									"const updrandomPetName = `${updpart1OfName} ${updpart2OfName}`; // Junção dos dois nomes\r",
									"\r",
									"const updrandomCategoryName = getRandomItem(animalCategories); // Seleciona uma categoria da sua lista\r",
									"const updrandomCustomTag = getRandomItem(customTags);\r",
									"\r",
									"// Geração de IDs de 4 dígitos\r",
									"//const petId = generateFourDigitId();\r",
									"const updcategoryId = generateFourDigitId();\r",
									"const updtagId = generateFourDigitId();\r",
									"const updcustomTagId = generateFourDigitId();\r",
									"\r",
									"// Variáveis\r",
									"pm.environment.set(\"updpart1OfName\", updpart1OfName);\r",
									"pm.environment.set(\"updpart2OfName\", updpart2OfName);\r",
									"pm.environment.set(\"updpetName\", updrandomPetName);\r",
									"pm.environment.set(\"updpetCategoryName\", updrandomCategoryName);\r",
									"//pm.environment.set(\"petId\", petId);\r",
									"pm.environment.set(\"updpetCategoryId\", updcategoryId);\r",
									"pm.environment.set(\"updpetTagId\", updtagId);\r",
									"pm.environment.set(\"updpetCustomTag\", updrandomCustomTag);\r",
									"pm.environment.set(\"updpetCustomTagId\", updcustomTagId);\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "bc08fff7-bc1c-4fad-beb3-e7de4298226c",
								"exec": [
									"    let jsonData = pm.response.json();\r",
									"    pm.test(\"Pet atualizado com sucesso\", () => {\r",
									"\r",
									"   if(pm.response.code === 200){\r",
									"     pm.expect(jsonData, \"Valor vazio\").to.exist;\r",
									"     pm.expect(jsonData.code, \"Sem sucesso\").to.eql(200);\r",
									"    pm.collectionVariables.set(\"IDPet\",jsonData.id);\r",
									"   }\r",
									"   else{\r",
									"     pm.expect.fail(JSON.stringify(jsonData) + \" RETURN STATUS CODE : \" + pm.response.code)\r",
									"   }\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "46757820-5dce4f85-093f-477d-9111-f6109b074c0e",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{IDPetupd}},\r\n  \"category\": {\r\n    \"id\": {{updpetCategoryId}},\r\n    \"name\": \"{{updpetCategoryName}}\"\r\n  },\r\n  \"name\": \"{{updpetName}}\",\r\n  \"photoUrls\": [\r\n    \"https://example.com/photos/{{updpart2OfName}}_{{updpart1OfName}}.jpg\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": {{updpetTagId}},\r\n      \"name\": \"{{updpetCustomTag}}\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}/v2/pet",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"v2",
								"pet"
							]
						},
						"description": "Generated from cURL: curl -X 'PUT' \\\r\n  'https://petstore.swagger.io/v2/pet' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/json' \\\r\n  -d '{\r\n  \"id\": 0,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}'"
					},
					"response": []
				},
				{
					"name": "Find pet by ID",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "51bd3042-01a3-4c90-bff6-e2ce972df9a9",
								"exec": [
									"let jsonData = pm.response.json();\r",
									" setTimeout(function () { \r",
									"pm.sendRequest({\r",
									"    url: `${pm.environment.get(\"baseURL\")}/v2/pet/findByStatus?status=available,pending,sold`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    if (err || res.code !== 200) {\r",
									"        console.error(\"Erro ao buscar pets por status:\", err || res.status);\r",
									"        postman.setNextRequest(null); \r",
									"        return;\r",
									"    }\r",
									"\r",
									"    const pets = res.json();\r",
									"    const ids = pets\r",
									"        .filter(pet => pet.id !== undefined && pet.id !== null)\r",
									"        .map(pet => pet.id);\r",
									"\r",
									"    if (ids.length === 0) {\r",
									"        console.error(\"Nenhum pet com ID encontrado. Parando execução.\");\r",
									"        postman.setNextRequest(null); \r",
									"        return;\r",
									"    }\r",
									"\r",
									"    const randomId = ids[Math.floor(Math.random() * ids.length)];\r",
									"    pm.variables.set(\"IDPet\", randomId);\r",
									"    console.log(\"IDPet selecionado:\", randomId);\r",
									"\r",
									"    postman.setNextRequest(\"Nome da Sua Requisição Principal\");\r",
									"    console.log(\"IDPet selecionado:\", randomId);\r",
									"})\r",
									" }\r",
									",1200);"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "ed0b89d5-49c4-4938-9ed0-afe8a3d0be2c",
								"exec": [
									"pm.test(\"Validar busca de pet por ID\", () => {\r",
									"\r",
									"   if(pm.response.code === 200){\r",
									"     const jsonData = pm.response.json();\r",
									"     pm.expect(jsonData, \"Valor vazio\").to.exist;\r",
									"\r",
									"   }\r",
									"   else{\r",
									"     pm.expect.fail(JSON.stringify(jsonData) + \" RETURN STATUS CODE : \" + pm.response.code)\r",
									"   }\r",
									"})\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "46757820-5301e660-3f4f-4c4f-8ef6-73b757937891",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "api_key",
								"value": "special-key"
							}
						],
						"url": {
							"raw": "{{baseURL}}/v2/pet/{{IDPet}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"v2",
								"pet",
								"{{IDPet}}"
							]
						},
						"description": "Generated from cURL: curl -X 'GET' \\\r\n  'https://petstore.swagger.io/v2/pet/456465' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'api_key: special-key'"
					},
					"response": []
				},
				{
					"name": "Updates a pet in the store with form data",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "044c6609-8fbe-4916-8f07-30faa7eb0dcd",
								"exec": [
									"pm.sendRequest({\r",
									"    url: `${pm.environment.get(\"baseURL\")}/v2/pet/findByStatus?status=available,pending,sold`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    if (err || res.code !== 200) {\r",
									"        console.error(\"Erro ao buscar pets por status:\", err || res.status);\r",
									"        postman.setNextRequest(null); \r",
									"        return;\r",
									"    }\r",
									"\r",
									"    const pets = res.json();\r",
									"\r",
									"    // Filtra pets válidos (com ID e nome definidos)\r",
									"    const validPets = pets.filter(pet => pet.id !== undefined && pet.name);\r",
									"\r",
									"    if (validPets.length === 0) {\r",
									"        console.error(\"Nenhum pet válido encontrado. Parando execução.\");\r",
									"        postman.setNextRequest(null); \r",
									"        return;\r",
									"    }\r",
									"\r",
									"    // Seleciona aleatoriamente um pet da lista filtrada\r",
									"    const randomPet = validPets[Math.floor(Math.random() * validPets.length)];\r",
									"\r",
									"    // Armazena o ID e o nome para uso posterior\r",
									"    pm.variables.set(\"IDPetupdfd\", randomPet.id);\r",
									"    pm.variables.set(\"PetNameupdfd\", randomPet.name);\r",
									"    console.log(\"IDPet selecionado:\", randomPet.id);\r",
									"    console.log(\"Nome do pet selecionado:\", randomPet.name);\r",
									"\r",
									"    // Gera um status aleatório\r",
									"    const statuses = [\"available\", \"pending\", \"sold\"];\r",
									"    const randomStatus = statuses[Math.floor(Math.random() * statuses.length)];\r",
									"    pm.variables.set(\"status\", randomStatus);\r",
									"    console.log(\"Status aleatório definido:\", randomStatus);\r",
									"\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "244d781d-e3b0-46b4-908f-d8048624bb59",
								"exec": [
									"\r",
									"let jsonData = pm.response.json();\r",
									"    pm.test(\"Status do pet atualizado com sucesso\", () => {\r",
									"\r",
									"   if(pm.response.code === 200){\r",
									"     pm.expect(jsonData, \"Valor vazio\").to.exist;\r",
									"     pm.expect(jsonData.code, \"Sem sucesso\").to.eql(200);\r",
									"    pm.collectionVariables.set(\"IDPet\",jsonData.id);\r",
									"   }\r",
									"   else{\r",
									"     pm.expect.fail(JSON.stringify(jsonData) + \" RETURN STATUS CODE : \" + pm.response.code)\r",
									"   }\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "46757820-44406f80-00ba-4e25-bbc4-a880811a1517",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"type": "text",
									"key": "name",
									"value": "{{PetNameupdfd}}"
								},
								{
									"type": "text",
									"key": "status",
									"value": "{{status}}"
								}
							]
						},
						"url": {
							"raw": "{{baseURL}}/v2/pet/{{IDPetupdfd}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"v2",
								"pet",
								"{{IDPetupdfd}}"
							]
						},
						"description": "Generated from cURL: curl -X 'POST' \\\r\n  'https://petstore.swagger.io/v2/pet/4670' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'Content-Type: application/x-www-form-urlencoded' \\\r\n  -d 'name=aaaa&status=Sold'"
					},
					"response": []
				},
				{
					"name": "Delete a pet",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"id": "57222944-1cbd-4992-94e9-67ef89df0e0b",
								"exec": [
									"pm.sendRequest({\r",
									"    url: `${pm.environment.get(\"baseURL\")}/v2/pet/findByStatus?status=available,pending,sold`,\r",
									"    method: 'GET',\r",
									"    header: {\r",
									"        'Content-Type': 'application/json'\r",
									"    }\r",
									"}, function (err, res) {\r",
									"    if (err || res.code !== 200) {\r",
									"        console.error(\"Erro ao buscar pets por status:\", err || res.status);\r",
									"        postman.setNextRequest(null); \r",
									"        return;\r",
									"    }\r",
									"\r",
									"    const pets = res.json();\r",
									"\r",
									"    // Filtra pets válidos (com ID e nome definidos)\r",
									"    const validPets = pets.filter(pet => pet.id !== undefined && pet.name);\r",
									"\r",
									"    if (validPets.length === 0) {\r",
									"        console.error(\"Nenhum pet válido encontrado. Parando execução.\");\r",
									"        postman.setNextRequest(null); \r",
									"        return;\r",
									"    }\r",
									"\r",
									"    // Seleciona aleatoriamente um pet da lista filtrada\r",
									"    const randomPet = validPets[Math.floor(Math.random() * validPets.length)];\r",
									"\r",
									"    // Armazena o ID e o nome para uso posterior\r",
									"    pm.variables.set(\"IDPetDlt\", randomPet.id);\r",
									"\r",
									"\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"id": "83eb3883-9c90-4d0f-a12a-f2b6ba3f64ef",
								"exec": [
									"\r",
									"\r",
									"let jsonData = pm.response.json();\r",
									"    pm.test(\"Registro do pet excluído com sucesso\", () => {\r",
									"\r",
									"   if(pm.response.code === 200){\r",
									"     pm.expect(jsonData, \"Valor vazio\").to.exist;\r",
									"     pm.expect(jsonData.code, \"Sem sucesso\").to.eql(200);\r",
									"    pm.collectionVariables.set(\"IDPet\",jsonData.id);\r",
									"   }\r",
									"   else{\r",
									"     pm.expect.fail(JSON.stringify(jsonData) + \" RETURN STATUS CODE : \" + pm.response.code)\r",
									"   }\r",
									"})"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"id": "46757820-007cdfa4-cbd4-482c-ab16-8db7e408c40a",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "accept",
								"value": "application/json"
							},
							{
								"key": "api_key",
								"value": "special-key"
							}
						],
						"url": {
							"raw": "{{baseURL}}/v2/pet/{{IDPetDlt}}",
							"host": [
								"{{baseURL}}"
							],
							"path": [
								"v2",
								"pet",
								"{{IDPetDlt}}"
							]
						},
						"description": "Generated from cURL: curl -X 'DELETE' \\\r\n  'https://petstore.swagger.io/v2/pet/4670' \\\r\n  -H 'accept: application/json' \\\r\n  -H 'api_key: special-key'"
					},
					"response": []
				}
			],
			"id": "46757820-825e53f5-899a-40b2-a498-551a9eb29500"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "155c9222-6a1d-4ccc-b7b2-31c3443b6df2",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "f3ca218d-11b7-4575-b3a7-dd1a5412da0a",
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "IDPet",
			"value": "",
			"type": "string"
		},
		{
			"key": "part1OfName",
			"value": ""
		},
		{
			"key": "part2OfName",
			"value": ""
		},
		{
			"key": "petName",
			"value": ""
		},
		{
			"key": "petCategoryName",
			"value": ""
		},
		{
			"key": "petId",
			"value": ""
		},
		{
			"key": "petCategoryId",
			"value": ""
		},
		{
			"key": "petTagId",
			"value": ""
		},
		{
			"key": "petCustomTag",
			"value": ""
		},
		{
			"key": "updpart1OfName",
			"value": ""
		},
		{
			"key": "updpart2OfName",
			"value": ""
		},
		{
			"key": "updpetName",
			"value": ""
		},
		{
			"key": "updpetCategoryName",
			"value": ""
		},
		{
			"key": "updpetCategoryId",
			"value": ""
		},
		{
			"key": "updpetTagId",
			"value": ""
		},
		{
			"key": "updpetCustomTag",
			"value": ""
		},
		{
			"key": "updpetCustomTagId",
			"value": ""
		},
		{
			"key": "updpetId",
			"value": ""
		},
		{
			"key": "petCustomTagId",
			"value": ""
		}
	]
}